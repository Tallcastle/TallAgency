### operations are sorted by order of 
### 1) no. of required operatives
### 2) required network strength
### eg. 1/70 comes before 2/40

#TALLeis - All Resistance spacific Operations
#Token Generating Operations = 2 of 2
#Resistance Oparations = 1 of 1

	###################################
	### Token Generating Operations ###
	###################################

#TALL - The 'make resistance contacts' mission is part of vanila HOI4
operation_make_resistance_contacts = { ### 9 2/40
	icon = GFX_operations_make_resistance_contacts
	map_icon = GFX_operations_make_resistance_contacts_map
	name = operation_make_resistance_contacts
	desc = operation_make_resistance_contacts_desc
	priority = 6

	days = 120 #TALL original = 60
	network_strength = 40
	operatives = 2

	visible = {
		AND = {
			network_national_coverage = {
				target = FROM
				value > 0
			}

			NOT = {
				has_operation_token = {
					tag = FROM
					token = token_resistance_contacts
				}
			}

			OR = {
				FROM = {
					any_controlled_state = {
						has_resistance = yes
					}
				}		

				FROM = {
					any_controlled_state = {
						is_core_of = ROOT
					}
				}	

				FROM = {
					AND = {
						has_war = no
						has_stability < 0.3
					}
				}

				ROOT = {
					has_war_with = FROM
				}

				ROOT = {
					has_wargoal_against = FROM
				}

				FROM = {
					has_civil_war = no
					has_stability < 0.45
					NOT = {
						has_government = var:PREV.ROOT.current_party_ideology_group
					}
					if = {
						limit = {
							PREV.ROOT = { has_government = fascism }
						}
						fascism > 0.2
					}
					if = {
						limit = {
							PREV.ROOT = { has_government = communism }
						}
						communism > 0.2
					}
					if = {
						limit = {
							PREV.ROOT = { has_government = democratic }
						}
						democratic > 0.2
					}
					if = {
						limit = {
							PREV.ROOT = { has_government = neutrality }
						}
						neutrality > 0.2
					}
				}
			}
		}
	}

	equipment = {
		
	}
	
	selection_target = {
		targets = { FROM }
	}

	selection_target_state = {
		OR = {
			has_resistance = yes
			any_state = { is_core_of = ROOT }
			is_capital = yes
		}
	}

	available = {
		#NOT = {
		#	has_operation_token = {
		#		tag = FROM
		#		token = token_resistance_contacts
		#	}
		#}
		#
		#FROM = {
		#	any_controlled_state = {
		#		has_resistance = yes
		#	}
		#}
	}
	
	awarded_tokens = {
		token_resistance_contacts
	}
	risk_chance = 0.1
	outcome_extra_chance = 0.25
	risk_modifiers = { operation_infiltrate_risk operation_risk }
	outcome_modifiers = { operation_infiltrate_outcome operation_outcome }
	cost_modifiers = { operation_infiltrate_cost operation_cost }
	outcome_execute = {
		ROOT = {
			add_operation_token = {
				tag = FROM
				token = token_resistance_contacts
			}
		}
	}
	outcome_extra_execute = { # SCOPE_OPERATION
		random_list = {
			33 = {
				ROOT = {
					add_operation_token = {
						tag = FROM
						token = token_resistance_contacts
					}
				}
				FROM.FROM = {
					add_resistance_target = {
						amount = 7.5 #TALL original = 10
						tooltip = intelligency_agency_resistance_boost_tt
						days = 180
					}
					subtract_from_variable = { boost_resistance_chance = 10 }
				}
			}
			67 = {
				ROOT = {
					add_operation_token = {
						tag = FROM
						token = token_resistance_contacts
					}
				}
				FROM.FROM = {
					add_resistance_target = {
						amount = 7.5 #TALL original = 10
						tooltip = intelligency_agency_resistance_boost_tt
						days = 60
					}
					subtract_from_variable = { boost_resistance_chance = 10 }
				}
			}
		}
	}

	outcome_potential = {
		ROOT = {
			add_operation_token = {
				tag = FROM
				token = token_resistance_contacts
			}
		}
	}

	target_weight = {
		base = 100
		
		modifier = {
			add = boost_resistance_chance
		}
		
		modifier = {
			set_temp_variable = { t = distance_to@ROOT.capital }
			divide_temp_variable = { t = 600 }
			clamp_temp_variable = { var = t min = 0 max = 1 }
			multiply_temp_variable = { t = -40 }
			
			add = t
		}
	}
	
	phases = { #infiltration
		infiltration_border = { base = 25 }
		infiltration_submarine = { base = 25 }
		infiltration_paradrop = { 
			base = 25 
			modifier = {
				ROOT = { 
					has_equipment = {
						transport_plane_equipment < 1
					}
				}
				factor = 0.1 #less likely if we have no transports
			}
		}
	}
	phases = { #resistance contacts
		resistance_contacts_radio_circuits = { base = 33 }
		resistance_support_pidgeons = { base = 33 }
		resistance_contacts_briefings = { base = 33 }
	}
	phases = { #exfiltration
		exfiltration_air_pickup = { 
			base = 15 
			modifier = {
				ROOT = { 
					has_equipment = {
						transport_plane_equipment < 1
					}
				}
				factor = 0.1 #less likely if we have no transports
			}
		}
		exfiltration_border = { base = 30 }
		exfiltration_go_to_ground = { base = 30 }
		exfiltration_submarine_pickup = { base = 25 }
	}
}

#TALL - The 'prepare sabotage' mission is custom to The Agency, it enables all other sabotage themed missions
operation_prep_sabotage = { ### custom-agency
	icon = GFX_operations_boost_resistance
	map_icon = GFX_operations_boost_resistance_map
	name = operation_prep_sabotage
	desc = operation_prep_sabotage_desc
	priority = 7

	days = 45
	network_strength = 40
	operatives = 2

	visible = {
		AND = {
			network_national_coverage = {
				target = FROM
				value > 0
			}

			has_operation_token = {
				tag = FROM
				token = token_resistance_contacts
			}

			NOT = {
				has_operation_token = {
					tag = FROM
					token = token_prep_sabotage
				}
			}

			OR = {
				FROM = {
					any_controlled_state = {
						has_resistance = yes
					}
				}
					
				FROM = {
					any_controlled_state = {
						is_core_of = ROOT
					}
				}

				FROM = {
					AND = {
						has_war = no
						has_stability < 0.3
					}
				}
				
				ROOT = {
					has_war_with = FROM
				}

				ROOT = {
					has_wargoal_against = FROM
				}

				FROM = {
					has_civil_war = no
					has_stability < 0.45
					NOT = {
						has_government = var:PREV.ROOT.current_party_ideology_group
					}
					if = {
						limit = {
							PREV.ROOT = { has_government = fascism }
						}
						fascism > 0.3
					}
					if = {
						limit = {
							PREV.ROOT = { has_government = communism }
						}
						communism > 0.3
					}
					if = {
						limit = {
							PREV.ROOT = { has_government = democratic }
						}
						democratic > 0.3
					}
					if = {
						limit = {
							PREV.ROOT = { has_government = neutrality }
						}
						neutrality > 0.3
					}
				}
			}
		}
	}

	equipment = {
		support_equipment = 40
	}
	
	selection_target = {
		targets = { FROM }
	}

	selection_target_state = {
		OR = {
			has_resistance = yes
			any_state = { is_core_of = ROOT }
			is_capital = yes
		}
	}

	available = {
		#NOT = {
		#	has_operation_token = {
		#		tag = FROM
		#		token = token_resistance_contacts
		#	}
		#}
		#
		#FROM = {
		#	any_controlled_state = {
		#		has_resistance = yes
		#	}
		#}
	}
	
	awarded_tokens = {
		token_prep_sabotage
	}
	risk_chance = 0.2
	outcome_extra_chance = 0.25
	risk_modifiers = { operation_infiltrate_risk operation_risk }
	outcome_modifiers = { operation_infiltrate_outcome operation_outcome }
	cost_modifiers = { operation_infiltrate_cost operation_cost }
	outcome_execute = {
		ROOT = {
			add_operation_token = {
				tag = FROM
				token = token_prep_sabotage
			}
		}
	}
	outcome_extra_execute = { # SCOPE_OPERATION
		random_list = {
			33 = {
				ROOT = {
					add_operation_token = {
						tag = FROM
						token = token_prep_sabotage
					}
				}
				FROM.FROM = {
					add_resistance_target = {
						amount = 1
						tooltip = intelligency_agency_resistance_boost_tt
						days = 180
					}
					subtract_from_variable = { boost_resistance_chance = 10 }
				}
			}
			67 = {
				ROOT = {
					add_operation_token = {
						tag = FROM
						token = token_prep_sabotage
					}
				}
				FROM.FROM = {
					add_resistance_target = {
						amount = 1
						tooltip = intelligency_agency_resistance_boost_tt
						days = 60
					}
					subtract_from_variable = { boost_resistance_chance = 10 }
				}
			}
		}
	}

	outcome_potential = {
		ROOT = {
			add_operation_token = {
				tag = FROM
				token = token_prep_sabotage
			}
		}
	}

	target_weight = {
		base = 100
		
		modifier = {
			add = boost_resistance_chance
		}
		
		modifier = {
			set_temp_variable = { t = distance_to@ROOT.capital }
			divide_temp_variable = { t = 600 }
			clamp_temp_variable = { var = t min = 0 max = 1 }
			multiply_temp_variable = { t = -40 }
			
			add = t
		}
	}
	
	phases = { #infiltration
		infiltration_border = { base = 25 }
		infiltration_submarine = { base = 25 }
		infiltration_paradrop = { 
			base = 25 
			modifier = {
				ROOT = { 
					has_equipment = {
						transport_plane_equipment < 1
					}
				}
				factor = 0.1 #less likely if we have no transports
			}
		}
	}
	phases = { #resistance contacts
		coordinated_strike_scout_target = { base = 33 }
		resistance_support_arms_depots = { base = 33 }
		coordinate_strike_mark_targets = { base = 33 }
	}
	phases = { #exfiltration
		exfiltration_air_pickup = { 
			base = 15 
			modifier = {
				ROOT = { 
					has_equipment = {
						transport_plane_equipment < 1
					}
				}
				factor = 0.1 #less likely if we have no transports
			}
		}
		exfiltration_border = { base = 30 }
		exfiltration_go_to_ground = { base = 30 }
		exfiltration_submarine_pickup = { base = 25 }
	}
}

	#######################################
	### Resistance Exclusive Operations ###
	#######################################

#TALL - The 'boost resistance' mission is part of vanila HOI4
operation_boost_resistance = { ### 8 2/40
	icon = GFX_operations_boost_resistance
	map_icon = GFX_operations_boost_resistance_map
	name = operation_boost_resistance
	desc = operation_boost_resistance_desc
	priority = 19
	
	cost_multiplier = 0.25
	
	days = 45 #TALL original = 50
	network_strength = 35
	operatives = 1 #TALL original = 2

	visible = {
		AND = {
			network_national_coverage = {
				target = FROM
				value > 0
			}

			has_operation_token = {
				tag = FROM
				token = token_resistance_contacts
			}

			FROM = {
				any_controlled_state = {
					has_resistance = yes
				}
			}
		}
	}

	selection_target = {
		targets = { FROM }
	}

	selection_target_state = {
		has_resistance = yes
	}

	equipment = {

	}

	required_tokens = {
		token_resistance_contacts
	}

	risk_chance = 0.2
	experience = 3 #TALL original = 1.5
	outcome_extra_chance = 0.25
	outcome_modifiers = { boost_resistance_factor }
	outcome_execute = {
		FROM.FROM = {
			add_resistance_target = {
				amount = 7.5 #TALL original = 10
				tooltip = intelligency_agency_resistance_boost_tt
			}
			subtract_from_variable = { boost_resistance_chance = 10 }
		}
	}
	outcome_extra_execute = { # SCOPE_OPERATION
		random_list = {
			33 = { #critical success
				FROM.FROM = {
					add_resistance_target = {
						amount = 15 #TALL original = 20
						tooltip = intelligency_agency_resistance_boost_tt
					}
					subtract_from_variable = { boost_resistance_chance = 10 }
				}
				FROM.FROM = {
					add_compliance = -7.5 #TALL original = -10
				}
			}
			67 = { #normal success
				FROM.FROM = {
					add_resistance_target = {
						amount = 15 #TALL original = 20
						tooltip = intelligency_agency_resistance_boost_tt
					}
					subtract_from_variable = { boost_resistance_chance = 10 }
				}
			}
		}
	}

	outcome_potential = {
		FROM.FROM = {
			add_resistance_target = {
				amount = 7.5 #TALL original = 10
				tooltip = intelligency_agency_resistance_boost_tt
			}
		}
	}

	
	target_weight = {
		base = 100
		
		modifier = {
			add = boost_resistance_chance
		}
		
		modifier = {
			set_temp_variable = { t = distance_to@ROOT.capital }
			divide_temp_variable = { t = 600 }
			clamp_temp_variable = { var = t min = 0 max = 1 }
			multiply_temp_variable = { t = -40 }
			
			add = t
		}
	}
	
	phases = { #infiltration
		infiltration_border = { base = 50 }
		infiltration_submarine = { base = 25 }
		infiltration_paradrop = { 
			base = 25 
		}
	}
	phases = { #resistance support
		resistance_support_arms_depots = { base = 25 }
		resistance_support_distribute_weapons = { base = 25 }
		resistance_support_organize_training = { base = 25 }
		resistance_support_coordinate_groups = {
			base = 25
			modifier = {
				FROM.FROM = {
					resistance < 40
				}
				factor = 30
			}
		}
	}
	phases = { #exfiltration
		exfiltration_air_pickup = { 
			base = 15 
		}
		exfiltration_border = { base = 30 }
		exfiltration_go_to_ground = { base = 30 }
		exfiltration_submarine_pickup = { base = 25 }
	}
}
